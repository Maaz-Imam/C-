#include<iostream>
#include<stdlib.h>
#include<conio.h>
using namespace std;

class tictactoe
{
	private:
		int arr[3][3];
		
	public:	
		tictactoe()
		{
			int r,c;
			for(r=0;r<3;r++)
			{
				for(c=0;c<3;c++)
				{
					*(*(arr + r) + c) = 0;
				}
			}
		}
		 
		structure()
		{
			int r,c;
			cout << "\n\t---------------";
			for(r=0;r<3;r++)
			{
				cout << endl << "\t";
				for(c=0;c<3;c++)
				{
					cout << "| " << *(*(arr + r) + c) << " |";
				}
				cout << "\n\t---------------";
			}
			cout << endl;
		}
		
		turn(int a)
		{
			int move;
			int i = a;
			while(i<10)
			{
				if(i%2!=0)
				{
					cout << "\nYour turn Player 1: ";
					cin >> move;
					if(move>0 && move<10)
					{
						position(move-1,1,i);
					}
					else
					{
						cout << "Enter a correct position, 1-9.";
						i--;
						getch();
					}
				}
				else
				{
					cout << "\nYour turn Player 2: ";
					cin >> move;
					if(move>0 && move<10)
					{
						position(move-1,2,i);
					}
					else
					{
						cout << "Enter a correct position, 1-9.";
						i--;
						getch();
					}
				}
				system("CLS");
				structure();
				winner();
				if(i==9)
				{
					draw();
				}
				i++;
			}
		}
		
		position(int move, int a, int i)
		{
			if(a==1)
			{
				if(move<=2)
				{
					if(*(*(arr + 0) + move) == 0)
					{
						*(*(arr + 0) + move) = 1;
					}
					else
					{
						cout << "\nAlready filled square, try again!";
						getch();
						turn(i);
					}
				}
				else if(move>2 && move<=5)
				{
					if(*(*(arr + 1) + move-3) == 0)
					{
						*(*(arr + 1) + move-3) = 1;
					}
					else
					{
						cout << "\nAlready filled square, try again!";
						getch();
						turn(i);
					}
				}
				else if(move>5 && move<=8)
				{
					if(*(*(arr + 2) + move-6) == 0)
					{
						*(*(arr + 2) + move-6) = 1;
					}
					else
					{
						cout << "\nAlready filled square, try again!";
						getch();
						turn(i);
					}
				}
			}
			else if(a==2)
			{
				if(move<=2)
				{
					if(*(*(arr + 0) + move) == 0)
					{
						*(*(arr + 0) + move) = 2;
					}
					else
					{
						cout << "\nAlready filled square, try again!";
						getch();
						turn(i);
					}
				}
				else if(move>2 && move<=5)
				{
					if(*(*(arr + 1) + move-3) == 0)
					{
						*(*(arr + 1) + move-3) = 2;
					}
					else
					{
						cout << "\nAlready filled square, try again!";
						getch();
						turn(i);
					}
				}
				else if(move>5 && move<=8)
				{
					if(*(*(arr + 2) + move-6) == 0)
					{
						*(*(arr + 2) + move-6) = 2;
					}
					else
					{
						cout << "\nAlready filled square, try again!";
						getch();
						turn(i);
					}
				}
			}
		}
		
		winner()
		{
			int end = 0;
			if(arr[0][0] == arr[0][1] && arr[0][0] == arr[0][2] && arr[0][0] == 1)
			{
				cout << endl << "\tPLlayer 1 wins!" << endl;
				end = 1;
			}
			else if(arr[1][0] == arr[1][1] && arr[1][0] == arr[1][2] && arr[1][0] == 1)
			{
				cout << endl << "\tPLlayer 1 wins!" << endl;
				 end = 1;
			}
			else if(arr[2][0] == arr[2][1] && arr[2][0] == arr[2][2] && arr[2][0] == 1)
			{
				cout << endl << "\tPLlayer 1 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][0] == arr[1][0] && arr[0][0] == arr[2][0] && arr[0][0] == 1)
			{
				cout << endl << "\tPLlayer 1 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][1] == arr[1][1] && arr[0][1] == arr[2][1] && arr[0][1] == 1)
			{
				cout << endl << "\tPLlayer 1 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][2] == arr[1][2] && arr[0][2] == arr[2][2] && arr[0][2] == 1)
			{
				cout << endl << "\tPLlayer 1 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][0] == arr[1][1] && arr[0][0] == arr[2][2] && arr[0][0] == 1)
			{
				cout << endl << "\tPLlayer 1 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][2] == arr[1][1] && arr[0][2] == arr[2][0] && arr[0][2] == 1)
			{
				cout << endl << "\tPLlayer 1 wins!" << endl;
				 end = 1;
			}
			
			if(arr[0][0] == arr[0][1] && arr[0][0] == arr[0][2] && arr[0][0] == 2)
			{
				cout << endl << "\tPLlayer 2 wins!" << endl;
				 end = 1;
			}
			else if(arr[1][0] == arr[1][1] && arr[1][0] == arr[1][2] && arr[1][0] == 2)
			{
				cout << endl << "\tPLlayer 2 wins!" << endl;
				 end = 1;
			}
			else if(arr[2][0] == arr[2][1] && arr[2][0] == arr[2][2] && arr[2][0] == 2)
			{
				cout << endl << "\tPLlayer 2 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][0] == arr[1][0] && arr[0][0] == arr[2][0] && arr[0][0] == 2)
			{
				cout << endl << "\tPLlayer 2 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][1] == arr[1][1] && arr[0][1] == arr[2][1] && arr[0][1] == 2)
			{
				cout << endl << "\tPLlayer 2 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][2] == arr[1][2] && arr[0][2] == arr[2][2] && arr[0][2] == 2)
			{
				cout << endl << "\tPLlayer 2 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][0] == arr[1][1] && arr[0][0] == arr[2][2] && arr[0][0] == 2)
			{
				cout << endl << "\tPLlayer 2 wins!" << endl;
				 end = 1;
			}
			else if(arr[0][2] == arr[1][1] && arr[0][2] == arr[2][0] && arr[0][2] == 2)
			{
				cout << endl << "\tPLlayer 2 wins!" << endl;
				 end = 1;
			}
			
			if(end == 1)
			{
				exit(0);
			}
		}
		
		draw()
		{
			cout << endl << "The game is a draw." << endl;
			exit(0);
		}
};

int main()
{
	tictactoe game;
	game.structure();
	game.turn(1);
	return 1;
}
